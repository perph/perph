// Code generated by protoc-gen-go. DO NOT EDIT.
// source: configure.proto

package configure

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NewVersion struct {
	VersionID            string   `protobuf:"bytes,1,opt,name=versionID,proto3" json:"versionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewVersion) Reset()         { *m = NewVersion{} }
func (m *NewVersion) String() string { return proto.CompactTextString(m) }
func (*NewVersion) ProtoMessage()    {}
func (*NewVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_2743bc0c876cc3bd, []int{0}
}

func (m *NewVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewVersion.Unmarshal(m, b)
}
func (m *NewVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewVersion.Marshal(b, m, deterministic)
}
func (m *NewVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewVersion.Merge(m, src)
}
func (m *NewVersion) XXX_Size() int {
	return xxx_messageInfo_NewVersion.Size(m)
}
func (m *NewVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_NewVersion.DiscardUnknown(m)
}

var xxx_messageInfo_NewVersion proto.InternalMessageInfo

func (m *NewVersion) GetVersionID() string {
	if m != nil {
		return m.VersionID
	}
	return ""
}

type AcceptedVersion struct {
	VersionID            string   `protobuf:"bytes,1,opt,name=versionID,proto3" json:"versionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AcceptedVersion) Reset()         { *m = AcceptedVersion{} }
func (m *AcceptedVersion) String() string { return proto.CompactTextString(m) }
func (*AcceptedVersion) ProtoMessage()    {}
func (*AcceptedVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_2743bc0c876cc3bd, []int{1}
}

func (m *AcceptedVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AcceptedVersion.Unmarshal(m, b)
}
func (m *AcceptedVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AcceptedVersion.Marshal(b, m, deterministic)
}
func (m *AcceptedVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AcceptedVersion.Merge(m, src)
}
func (m *AcceptedVersion) XXX_Size() int {
	return xxx_messageInfo_AcceptedVersion.Size(m)
}
func (m *AcceptedVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_AcceptedVersion.DiscardUnknown(m)
}

var xxx_messageInfo_AcceptedVersion proto.InternalMessageInfo

func (m *AcceptedVersion) GetVersionID() string {
	if m != nil {
		return m.VersionID
	}
	return ""
}

func init() {
	proto.RegisterType((*NewVersion)(nil), "NewVersion")
	proto.RegisterType((*AcceptedVersion)(nil), "AcceptedVersion")
}

func init() { proto.RegisterFile("configure.proto", fileDescriptor_2743bc0c876cc3bd) }

var fileDescriptor_2743bc0c876cc3bd = []byte{
	// 124 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0xce, 0xcf, 0x4b,
	0xcb, 0x4c, 0x2f, 0x2d, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xd2, 0xe2, 0xe2, 0xf2,
	0x4b, 0x2d, 0x0f, 0x4b, 0x2d, 0x2a, 0xce, 0xcc, 0xcf, 0x13, 0x92, 0xe1, 0xe2, 0x2c, 0x83, 0x30,
	0x3d, 0x5d, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x10, 0x02, 0x4a, 0xfa, 0x5c, 0xfc, 0x8e,
	0xc9, 0xc9, 0xa9, 0x05, 0x25, 0xa9, 0x29, 0x44, 0x69, 0x30, 0xb2, 0xe0, 0xe2, 0x0a, 0x48, 0x2d,
	0x2a, 0xc8, 0x70, 0x4c, 0x4f, 0xcd, 0x2b, 0x11, 0xd2, 0xe2, 0xe2, 0x74, 0x86, 0xd9, 0x2e, 0xc4,
	0xad, 0x87, 0xb0, 0x56, 0x4a, 0x40, 0x0f, 0xcd, 0xdc, 0x24, 0x36, 0xb0, 0xeb, 0x8c, 0x01, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xa2, 0x95, 0xac, 0xce, 0xb0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PerphAgentClient is the client API for PerphAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PerphAgentClient interface {
	Configure(ctx context.Context, in *NewVersion, opts ...grpc.CallOption) (*AcceptedVersion, error)
}

type perphAgentClient struct {
	cc *grpc.ClientConn
}

func NewPerphAgentClient(cc *grpc.ClientConn) PerphAgentClient {
	return &perphAgentClient{cc}
}

func (c *perphAgentClient) Configure(ctx context.Context, in *NewVersion, opts ...grpc.CallOption) (*AcceptedVersion, error) {
	out := new(AcceptedVersion)
	err := c.cc.Invoke(ctx, "/PerphAgent/Configure", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PerphAgentServer is the server API for PerphAgent service.
type PerphAgentServer interface {
	Configure(context.Context, *NewVersion) (*AcceptedVersion, error)
}

// UnimplementedPerphAgentServer can be embedded to have forward compatible implementations.
type UnimplementedPerphAgentServer struct {
}

func (*UnimplementedPerphAgentServer) Configure(ctx context.Context, req *NewVersion) (*AcceptedVersion, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Configure not implemented")
}

func RegisterPerphAgentServer(s *grpc.Server, srv PerphAgentServer) {
	s.RegisterService(&_PerphAgent_serviceDesc, srv)
}

func _PerphAgent_Configure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewVersion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PerphAgentServer).Configure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PerphAgent/Configure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PerphAgentServer).Configure(ctx, req.(*NewVersion))
	}
	return interceptor(ctx, in, info, handler)
}

var _PerphAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "PerphAgent",
	HandlerType: (*PerphAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Configure",
			Handler:    _PerphAgent_Configure_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "configure.proto",
}
